№1. Реализовать класс «Дата»,
# функция-конструктор должна принимать данные в виде строки формата «день-месяц-год».
# В рамках реализовать два метода.
# Первый, с декоратором @classmethod, должен извлекать число, месяц, год и преобразовывать их тип к типу «Число».
# Второй, с декоратором @staticmethod, должен проводить валидацию числа, месяца и года (например, месяц - от 1 до 12).
# Проверить работу полученной структуры на реальных данных.

 Данные класса :
    def  __init__ ( я , даты : str ):
        я . даты  =  даты

    def  __str__ ( сам ):
        return  f "Дата в формате строки: { self . dates } "

    @ classmethod
    def  data_number ( cls , даты ):
        data_list  = []

        для  эл  в  датах . split ( "-" ):
            список_данных . добавить ( эл )
        cls . days  =  int ( список_данных [ 0 ])
        cls . месяцев  =  int ( список_данных [ 1 ])
        cls . годы  =  int ( список_данных [ 2 ])

        return  f "Дата в формате числа: { cls . days }  { cls . months }  { cls . years } "

    @ staticmethod
    def  data_validation ( дни : int , месяцы : int , годы : int ):

        если  дней  >  31 :
            return  f "Неверная дата: { days } "
        elif  месяцев  >  12 :
            return  f "Неверный месяц: { months } "
        elif  лет  ! =  2021 :
            return  f "Укажите текущий год: { years } "
        еще :
            return  f "Вы ввели правильную дату: { days } . { months } . { years } "


день  =  Данные ( "26-12-2021" )

печать ( день )
печать ( день . номер_данных ( день . даты ))
print ( день . data_validation ( день . дни , день . месяцы , день . годы ))
