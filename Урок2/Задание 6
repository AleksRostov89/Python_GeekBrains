 6. * Реализовать обработанные данные «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента - номер товара
# и словарь с функцией (характеристиками товара: цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
#
# [
# (1, {«название»: «компьютер», «цена»: 20000, «количество»: 5, «eд»: «шт.»}),
# (2, {«название»: «принтер», «цена»: 6000, «количество»: 2, «eд»: «шт.»}),
# (3, {«название»: «сканер», «цена»: 2000, «количество»: 7, «eд»: «шт.»})
#]
# Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ - характеристики товара, например название,
# а значение - список значений-характеристик, например список названий товаров.
# Пример:
#
# {
# «Название»: [«компьютер», «принтер», «сканер»],
# «Цена»: [20000, 6000, 2000],
# «Количество»: [5, 2, 7],
# «Ед»: [«шт.»]
#}

counter  =  0
input_list  = []
user_count  =  int ( input ( "Сколько товаров хотите добавить?" ))
пока  счетчик  <  user_count :
    print ( "*********************************************" )
    input_dict  = {                                              # вводим данные в словарь
        "название" : ввод ( "Введите наименование товара >>>" ),
        "цена" : ввод ( "Введите цену товара >>>" ),
        "количество" : ввод ( "Введите количество товара >>>" ),
        "ед" : "шт." }
    input_tupl  = ( counter  +  1 , input_dict ) # из словаря заполняем кортеж
    input_list . append ( input_tupl ) # в список добавляем кортежи
    счетчик  + =  1
print ( "*********************************************" )
print ( f "Сруктура данных« Товары »: { input_list } " )

output_dict  = {} # создаем пустой словарь
для  строки  в  input_list : # получаем заполненую строку из списка
    для  ключа , значение  в  stroka [ 1 ]. items (): # получаем из строки ключ / значение
        если  ключ  в  output_dict : # если ключ есть в виде
            если  значение  не  в  output_dict . get ( key ): # если нет значение в способ (по ключу)
                output_dict . получить ( ключ ). append ( value ) # получить ключ и добавить к нему значение
        еще :
            output_dict . update ({ key : [ value ]}) # добавляем ключ / значение в словаре
print ( f'Собранная аналитика «Товары»: { output_dict } ' )
